#---------------------------------------------------------
# - Create a semantical release
# - Set latest tag
#---------------------------------------------------------
  name: Bump version

  on:
    workflow_dispatch:
    push:
      branches:
        - next
        - next-major

  jobs:
    build:
      runs-on: ubuntu-latest

      steps:
        # required antecedent
        - uses: actions/checkout@v4
          with:
            persist-credentials: false

        - name: Setup Node.js environment
          uses: actions/setup-node@v4
          with:
            node-version: '20.9.0'

        - name: Install npm dev dependencies
          run: npm install

        - name: Get current version
          id: current_version
          run: |
            echo "CURRENT_VERSION=$(python -c 'from __version__ import __version__; print(__version__)')" >> $GITHUB_ENV
          env:
            GITHUB_TOKEN: ${{ secrets.PAT }}

        - name: Get next version
          id: next_version
          run: |
            echo "NEXT_VERSION=$(npx semantic-release --dry-run  | awk '/The next release version is/{print $NF}')" >> $GITHUB_ENV
          env:
            GITHUB_TOKEN: ${{ secrets.PAT }}

        - name: null step
          id: null_step
          run: echo "i do not do anything"

        - name: Check versions
          id: check_versions
          run: |
            if [ "$CURRENT_VERSION" != "$NEXT_VERSION" ]; then
              echo "VERSION_CHANGED=true" >> $GITHUB_ENV
            else
              echo "VERSION_CHANGED=false" >> $GITHUB_ENV
            fi
          env:
            CURRENT_VERSION: ${{ env.CURRENT_VERSION }}
            NEXT_VERSION: ${{ env.NEXT_VERSION }}

        - name: another null step
          id: another_null_step
          run: echo "i do not do anything either."


        - name: Update __version__
          if: env.VERSION_CHANGED == 'true'
          id: update_version
          run: |
            echo "__version__ = '${{ env.NEXT_VERSION }}'" > __version__.py
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add __version__.py
            git commit -m "chore: [gh] Update __version__.py to ${{ env.NEXT_VERSION }} [skip ci]"
            git push https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}
          env:
            GITHUB_TOKEN: ${{ secrets.PAT }}
            NEXT_VERSION: ${{ env.NEXT_VERSION }}
